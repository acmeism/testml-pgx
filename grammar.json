{"point_lines":"/((?:(?!<block_marker>|<point_marker>)<line>)*)/","constant_call":"/(<UPPER><WORD>*)/","point_marker":"/---/","ANY":"/[\\s\\S]/","block_header":["<block_marker>","( /<SPACE>+/ <block_label> )?","/<SPACE>*<EOL>/"],"HASH":"/#/","test_expression":["<sub_expression>","( <!assertion_function_call> <call_indicator> <sub_expression> )*"],"line":"/<NON_BREAK>*<EOL>/","sub_expression":"( <transform_call> | <point_call> | <string_call> | <constant_call> )","ESCAPE":"/[0nt]/","LOWER":"/[a-z]/","ALPHANUM":"/[A-Za-z0-9]/","SINGLE":"/'/","block_marker":"/===/","core_meta_keyword":"/(?:Title|Data|Plan|BlockMarker|PointMarker)/","user_transform":"/(<LOWER><WORD>*)/","DIGIT":"/[0-9]/","core_point_name":"/(<UPPER><WORD>*)/","BACK":"/\\/","assertion_operator":"/(==)/","test_section":"( <ws> | <test_statement> )*","transform_name":"( <user_transform> | <core_transform> )","data_section":"/(<block_marker>(?:<SPACE>|<EOL>)<ANY>+|\\Z)/","single_quoted_string":"/(?:<SINGLE>(([^<BREAK><BACK><SINGLE>]|<BACK><SINGLE>|<BACK><BACK>)*?)<SINGLE>)/","call_indicator":"/(?:<DOT><ws>*|<ws>*<DOT>)/","EOL":"/\\r?\\n/","DOUBLE":"/\"/","transform_argument_list_stop":"<ALWAYS>","assertion_call":"( <assertion_operator_call> | <assertion_function_call> )","meta_testml_statement":"/%TestML:<SPACE>+(<testml_version>)(?:<SPACE>+<comment>|<EOL>)/","assertion_function_call":["/<call_indicator><assertion_name>\\(<ws>*/","<test_expression>","/<ws>*\\)/"],"UPPER":"/[A-Z]/","assertion_operator_call":["/<ws>+/","<assertion_operator>","/<ws>+/","<test_expression>"],"WORD":"/\\w/","BREAK":"/\\n/","point_name":"( <core_point_name> | <user_point_name> )","ALWAYS":"//","document":["<meta_section>","<test_section>","<data_section>?"],"SPACES":"/\\ \\t/","SEMI":"/;/","meta_keyword":"/(?:<core_meta_keyword>|<user_meta_keyword>)/","point_phrase":"/(<unquoted_string>)/","DOT":"/\\./","unquoted_string":"/[^<SPACES><BREAK><HASH>](?:[^<BREAK><HASH>]*[^<SPACES><BREAK><HASH>])?/","TOP":"<document>","data":"<data_block>*","meta_section":["/(?:<comment>|<blank_line>)*/","( <meta_testml_statement> | <NO_META_TESTML_ERROR> )","( <meta_statement> | <comment> | <blank_line> )"],"lines_point":["/<point_marker><SPACE>+/","<point_name>","/<SPACE>*<EOL>/","<point_lines>"],"data_block":["<block_header>","( <blank_line> | <comment> )","<block_point>*"],"test_statement":["<test_statement_start>","<test_expression>","<assertion_call>?","( <SEMI> | <SEMICOLON_ERROR> )"],"STAR":"/\\*/","SPACE":"/[\\ \\t]/","ws":"/(?:<SPACE>|<EOL>|<comment>)/","block_label":"<unquoted_string>","blank_line":"/<SPACE>*<EOL>/","phrase_point":["/<point_marker><SPACE>+/","<point_name>","/:<SPACE>/","<point_phrase>","/<EOL>/","/(?:<comment>|<blank_line>)*/"],"user_meta_keyword":"/<LOWER><WORD>*/","NON_BREAK":"/./","transform_argument_list_start":"<ALWAYS>","token test_statement_start":"<ALWAYS>","core_transform":"/(<UPPER><WORD>*)/","transform_argument_list":["<transform_argument>","( /<ws>*,<ws>*/ <transform_argument> )*","<?>"],"transform_call":["<transform_name>","/\\(/","<transform_argument_list_start>","/<ws>*/","<argument_list>","/<ws>*/","<transform_argument_list_stop>","/\\)/"],"testml_version":"/(<DIGIT><DOT><DIGIT>+)/","meta_value":"/(?:<quoted_string>|<unquoted_string>)/","string_call":"<quoted_string>","quoted_string":"/(?:<single_quoted_string>|<double_quoted_string>)/","transform_argument":"<sub_expression>","assertion_function_name":"/EQ/","comment":"/<HASH><line>/","block_point":"( <lines_point> | <phrase_point> )","double_quoted_string":"/(?:<DOUBLE>(([^<BREAK><BACK><DOUBLE>]|<BACK><DOUBLE>|<BACK><BACK>|<BACK><ESCAPE>)*?)<DOUBLE>)/","user_point_name":"/(<LOWER><WORD>*)/","meta_statement":"/%(<meta_keyword>):<SPACE>+(<meta_value>)(?:<SPACE>+<comment>|<EOL>)/","point_call":"/(<STAR><LOWER><WORD>*)/"}